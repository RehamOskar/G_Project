// <auto-generated />
using System;
using G_Project.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace G_Project.Migrations
{
    [DbContext(typeof(SystemDbContext))]
    [Migration("20230417123830_addData")]
    partial class addData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("G_Project.Models.DescentData", b =>
                {
                    b.Property<int>("DescentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DescentId"), 1L, 1);

                    b.Property<string>("Day")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DescentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DescentTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("DescentId");

                    b.HasIndex("Id");

                    b.ToTable("descentDatas");
                });

            modelBuilder.Entity("G_Project.Models.Importer", b =>
                {
                    b.Property<int>("ImporterID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImporterID"), 1L, 1);

                    b.Property<string>("ActualName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameDocuments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ImporterID");

                    b.ToTable("importers");
                });

            modelBuilder.Entity("G_Project.Models.Product", b =>
                {
                    b.Property<int>("ProdectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProdectID"), 1L, 1);

                    b.Property<int>("BatchNumber")
                        .HasColumnType("int");

                    b.Property<string>("CommodityType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryOrigin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExaminationNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ImpotedQuantityItem")
                        .HasColumnType("int");

                    b.Property<string>("Matching")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Measure")
                        .HasColumnType("real");

                    b.Property<string>("NameProducingCompany")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfSampleUnitsDrawn")
                        .HasColumnType("int");

                    b.Property<string>("PackageType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("PrductWeight")
                        .HasColumnType("real");

                    b.Property<DateTime>("ProductionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ResultOfPrevioousExaminationReport")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Size")
                        .HasColumnType("real");

                    b.Property<DateTime>("StatementCard")
                        .HasColumnType("datetime2");

                    b.Property<string>("TradeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ValidityPeriods")
                        .HasColumnType("datetime2");

                    b.HasKey("ProdectID");

                    b.ToTable("products");
                });

            modelBuilder.Entity("G_Project.Models.ProductInProduction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("IdStartP")
                        .HasColumnType("int");

                    b.Property<int>("TypesOfProductsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdStartP");

                    b.HasIndex("TypesOfProductsId");

                    b.ToTable("productInProductions");
                });

            modelBuilder.Entity("G_Project.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("projects");
                });

            modelBuilder.Entity("G_Project.Models.SampleInspection", b =>
                {
                    b.Property<int>("SampleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SampleId"), 1L, 1);

                    b.Property<string>("CustomsDeclaration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DetectiveInspectore")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Document")
                        .HasColumnType("int");

                    b.Property<DateTime>("EditingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EditingReportNumber")
                        .HasColumnType("int");

                    b.Property<int>("ImporterId")
                        .HasColumnType("int");

                    b.Property<string>("Matching")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotchedSide")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProdectID")
                        .HasColumnType("int");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("Purpose")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Purpose_Of_Scoring")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Result")
                        .HasColumnType("int");

                    b.Property<int>("ShipmentId")
                        .HasColumnType("int");

                    b.Property<string>("TradeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SampleId");

                    b.HasIndex("ImporterId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("ShipmentId");

                    b.ToTable("sampleInspections");
                });

            modelBuilder.Entity("G_Project.Models.Shipment", b =>
                {
                    b.Property<int>("ShipmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShipmentID"), 1L, 1);

                    b.Property<DateTime>("DateReceiptShipment")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date_Of_CustomDeclaration")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location_Of_ItemsMade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number_Of_ItemsMade")
                        .HasColumnType("int");

                    b.Property<int>("Number_Of_Items_For_Examination")
                        .HasColumnType("int");

                    b.Property<int>("Number_Of_Transportation")
                        .HasColumnType("int");

                    b.Property<int>("Number_Of__CustomDeclaration")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReportDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReportNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("ShipmentArrivalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShipmentData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShipmentNumberMade")
                        .HasColumnType("int");

                    b.Property<int>("TotalOfShipment")
                        .HasColumnType("int");

                    b.Property<int>("TotalQuantityItemsMade")
                        .HasColumnType("int");

                    b.Property<int>("TotalQuantityMade")
                        .HasColumnType("int");

                    b.Property<int>("TransportationID")
                        .HasColumnType("int");

                    b.Property<string>("TransportationType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ShipmentID");

                    b.ToTable("shipments");
                });

            modelBuilder.Entity("G_Project.Models.StartOfActivity", b =>
                {
                    b.Property<int>("IdStartA")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdStartA"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Purpose")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Result")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdStartA");

                    b.ToTable("startOfActivities");
                });

            modelBuilder.Entity("G_Project.Models.StartOfProduction", b =>
                {
                    b.Property<int>("IdStartP")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdStartP"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdInvestor")
                        .HasColumnType("int");

                    b.Property<string>("Purpose")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfActivityPeriod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdStartP");

                    b.ToTable("startOfProductions");
                });

            modelBuilder.Entity("G_Project.Models.TypesOfProducts", b =>
                {
                    b.Property<int>("TypesOfProductsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TypesOfProductsId"), 1L, 1);

                    b.Property<string>("ProductRegistration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductionCapacity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TradeMark")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfProduct")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TypesOfProductsId1")
                        .HasColumnType("int");

                    b.HasKey("TypesOfProductsId");

                    b.HasIndex("TypesOfProductsId1");

                    b.ToTable("TypesOfProducts");
                });

            modelBuilder.Entity("G_Project.Models.VirtualExamination", b =>
                {
                    b.Property<int>("VirtualExaminationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VirtualExaminationId"), 1L, 1);

                    b.Property<string>("ExaminationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProdectID")
                        .HasColumnType("int");

                    b.HasKey("VirtualExaminationId");

                    b.HasIndex("ProdectID");

                    b.ToTable("VirtualExmination");
                });

            modelBuilder.Entity("G_Project.Models.DescentData", b =>
                {
                    b.HasOne("G_Project.Models.Project", "Project")
                        .WithMany("Descent_Data")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("G_Project.Models.ProductInProduction", b =>
                {
                    b.HasOne("G_Project.Models.StartOfProduction", "StartOfProduction")
                        .WithMany("ProductInProductions")
                        .HasForeignKey("IdStartP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("G_Project.Models.TypesOfProducts", "TypesOfProducts")
                        .WithMany()
                        .HasForeignKey("TypesOfProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StartOfProduction");

                    b.Navigation("TypesOfProducts");
                });

            modelBuilder.Entity("G_Project.Models.SampleInspection", b =>
                {
                    b.HasOne("G_Project.Models.Importer", "Importer")
                        .WithMany()
                        .HasForeignKey("ImporterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("G_Project.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("G_Project.Models.Shipment", "Shipment")
                        .WithMany()
                        .HasForeignKey("ShipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Importer");

                    b.Navigation("Project");

                    b.Navigation("Shipment");
                });

            modelBuilder.Entity("G_Project.Models.TypesOfProducts", b =>
                {
                    b.HasOne("G_Project.Models.TypesOfProducts", null)
                        .WithMany("TypesOfProduct")
                        .HasForeignKey("TypesOfProductsId1");
                });

            modelBuilder.Entity("G_Project.Models.VirtualExamination", b =>
                {
                    b.HasOne("G_Project.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProdectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("G_Project.Models.Project", b =>
                {
                    b.Navigation("Descent_Data");
                });

            modelBuilder.Entity("G_Project.Models.StartOfProduction", b =>
                {
                    b.Navigation("ProductInProductions");
                });

            modelBuilder.Entity("G_Project.Models.TypesOfProducts", b =>
                {
                    b.Navigation("TypesOfProduct");
                });
#pragma warning restore 612, 618
        }
    }
}
